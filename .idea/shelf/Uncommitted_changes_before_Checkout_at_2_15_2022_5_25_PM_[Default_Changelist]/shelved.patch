Index: TeamCode/src/main/java/org/firstinspires/ftc/teamcode/autonomous.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.firstinspires.ftc.teamcode;\r\n\r\nimport com.qualcomm.robotcore.eventloop.opmode.Autonomous;\r\nimport com.qualcomm.robotcore.hardware.HardwareMap;\r\n\r\nimport org.firstinspires.ftc.teamcode.BarcodePositionDetector;\r\nimport org.firstinspires.ftc.robotcore.external.hardware.camera.WebcamName;\r\n\r\n@Autonomous(name=\"autonomous\", group=\"Test\")\r\npublic class autonomous extends automethods {\r\n    HardwarePushbot robot = new HardwarePushbot();// Use a Pushbot's hardware\r\n\r\n\r\n    @Override\r\n    public void runOpMode() throws InterruptedException {\r\n        robot.init(hardwareMap);\r\n     //   robot.autoinit(hardwareMap);\r\n\r\n\r\n\r\n       /* int cameraMonitorViewId = hardwareMap.appContext.getResources().getIdentifier(\"cameraMonitorViewId\", \"id\", hardwareMap.appContext.getPackageName());\r\n        webcam = OpenCvCameraFactory.getInstance().createWebcam(hardwareMap.get(WebcamName.class, \"webcam\"), cameraMonitorViewId);\r\n        //phoneCam = OpenCvCameraFactory.getInstance().createInternalCamera(OpenCvInternalCamera.CameraDirection.BACK, cameraMonitorViewId);\r\n        webcam.setPipeline(pipeline);\r\n\r\n        // We set the viewport policy to optimized view so the preview doesn't appear 90 deg\r\n        // out when the RC activity is in portrait. We do our actual image processing assuming\r\n        // landscape orientation, though.\r\n        webcam.setViewportRenderingPolicy(OpenCvCamera.ViewportRenderingPolicy.OPTIMIZE_VIEW);\r\n\r\n        webcam.openCameraDeviceAsync(new OpenCvCamera.AsyncCameraOpenListener()\r\n        {\r\n            @Override\r\n            public void onOpened()\r\n            {\r\n                webcam.startStreaming(320,240, OpenCvCameraRotation.UPRIGHT);\r\n            }\r\n        });\r\n*/\r\n\r\n\r\n        waitForStart();\r\n\r\n////////////////////////////////////ROBOT  START////////////////////////////////////////////////////\r\n\r\n\r\n    encoderDrive(.5, 80, 6);\r\n        strafeRight(.5,-90,6);\r\n\r\n        //  rpos = returnRingPosition(3);\r\n\r\n\r\n////////////////////////////////\r\n//\r\n      /*  if(rpos == RingPipeline.RingPosition.NONE){\r\n            encoderDrive(.55, 2, 5);\r\n\r\n\r\n\r\n        }\r\n        if(rpos == RingPipeline.RingPosition.ONE )\r\n\r\n        {\r\n            encoderDrive(.55, 10, 5);\r\n\r\n        }\r\n        if(rpos == RingPipeline.RingPosition.NONE)\r\n\r\n        {\r\n            encoderDrive(.55, 20, 5);\r\n\r\n\r\n\r\n        }*/\r\n\r\n\r\n    }}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/autonomous.java b/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/autonomous.java
--- a/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/autonomous.java	(revision 03e9a094994b0bc62f846322110b5d9480b6e6e9)
+++ b/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/autonomous.java	(date 1644539500481)
@@ -44,9 +44,8 @@
 ////////////////////////////////////ROBOT  START////////////////////////////////////////////////////
 
 
-    encoderDrive(.5, 80, 6);
-        strafeRight(.5,-90,6);
-
+   // encoderDrive(.5, 80, 6);
+     //   strafeRight(.5,-90,6);
         //  rpos = returnRingPosition(3);
 
 
